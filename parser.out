shift/reduce conflict in state 74 resolved as shift.
shift/reduce conflict in state 74 resolved as shift.
shift/reduce conflict in state 74 resolved as shift.
shift/reduce conflict in state 74 resolved as shift.
shift/reduce conflict in state 74 resolved as shift.
shift/reduce conflict in state 74 resolved as shift.
shift/reduce conflict in state 74 resolved as shift.
shift/reduce conflict in state 74 resolved as shift.
shift/reduce conflict in state 74 resolved as shift.
shift/reduce conflict in state 74 resolved as shift.
shift/reduce conflict in state 74 resolved as shift.
shift/reduce conflict in state 74 resolved as shift.
shift/reduce conflict in state 74 resolved as shift.
shift/reduce conflict in state 111 resolved as shift.
shift/reduce conflict in state 111 resolved as shift.
shift/reduce conflict in state 111 resolved as shift.
shift/reduce conflict in state 111 resolved as shift.
shift/reduce conflict in state 111 resolved as shift.
shift/reduce conflict in state 111 resolved as shift.
shift/reduce conflict in state 111 resolved as shift.
shift/reduce conflict in state 111 resolved as shift.
shift/reduce conflict in state 111 resolved as shift.
shift/reduce conflict in state 111 resolved as shift.
shift/reduce conflict in state 111 resolved as shift.
shift/reduce conflict in state 111 resolved as shift.
shift/reduce conflict in state 115 resolved as shift.
shift/reduce conflict in state 115 resolved as shift.
shift/reduce conflict in state 115 resolved as shift.
shift/reduce conflict in state 115 resolved as shift.
shift/reduce conflict in state 115 resolved as shift.
shift/reduce conflict in state 115 resolved as shift.
shift/reduce conflict in state 115 resolved as shift.
shift/reduce conflict in state 115 resolved as shift.
shift/reduce conflict in state 115 resolved as shift.
shift/reduce conflict in state 115 resolved as shift.
shift/reduce conflict in state 115 resolved as shift.
shift/reduce conflict in state 115 resolved as shift.
shift/reduce conflict in state 120 resolved as shift.
shift/reduce conflict in state 123 resolved as shift.
shift/reduce conflict in state 123 resolved as shift.
shift/reduce conflict in state 123 resolved as shift.
shift/reduce conflict in state 123 resolved as shift.
shift/reduce conflict in state 123 resolved as shift.
shift/reduce conflict in state 123 resolved as shift.
shift/reduce conflict in state 123 resolved as shift.
shift/reduce conflict in state 123 resolved as shift.
shift/reduce conflict in state 123 resolved as shift.
shift/reduce conflict in state 123 resolved as shift.
shift/reduce conflict in state 123 resolved as shift.
shift/reduce conflict in state 123 resolved as shift.
shift/reduce conflict in state 134 resolved as shift.
shift/reduce conflict in state 134 resolved as shift.
shift/reduce conflict in state 134 resolved as shift.
shift/reduce conflict in state 134 resolved as shift.
shift/reduce conflict in state 134 resolved as shift.
shift/reduce conflict in state 134 resolved as shift.
shift/reduce conflict in state 134 resolved as shift.
shift/reduce conflict in state 134 resolved as shift.
shift/reduce conflict in state 134 resolved as shift.
shift/reduce conflict in state 134 resolved as shift.
shift/reduce conflict in state 134 resolved as shift.
shift/reduce conflict in state 134 resolved as shift.
shift/reduce conflict in state 135 resolved as shift.
shift/reduce conflict in state 135 resolved as shift.
shift/reduce conflict in state 135 resolved as shift.
shift/reduce conflict in state 135 resolved as shift.
shift/reduce conflict in state 135 resolved as shift.
shift/reduce conflict in state 135 resolved as shift.
shift/reduce conflict in state 135 resolved as shift.
shift/reduce conflict in state 135 resolved as shift.
shift/reduce conflict in state 135 resolved as shift.
shift/reduce conflict in state 135 resolved as shift.
shift/reduce conflict in state 135 resolved as shift.
shift/reduce conflict in state 135 resolved as shift.
shift/reduce conflict in state 136 resolved as shift.
shift/reduce conflict in state 136 resolved as shift.
shift/reduce conflict in state 136 resolved as shift.
shift/reduce conflict in state 136 resolved as shift.
shift/reduce conflict in state 136 resolved as shift.
shift/reduce conflict in state 136 resolved as shift.
shift/reduce conflict in state 136 resolved as shift.
shift/reduce conflict in state 136 resolved as shift.
shift/reduce conflict in state 136 resolved as shift.
shift/reduce conflict in state 136 resolved as shift.
shift/reduce conflict in state 136 resolved as shift.
shift/reduce conflict in state 136 resolved as shift.
shift/reduce conflict in state 137 resolved as shift.
shift/reduce conflict in state 137 resolved as shift.
shift/reduce conflict in state 137 resolved as shift.
shift/reduce conflict in state 137 resolved as shift.
shift/reduce conflict in state 137 resolved as shift.
shift/reduce conflict in state 137 resolved as shift.
shift/reduce conflict in state 137 resolved as shift.
shift/reduce conflict in state 137 resolved as shift.
shift/reduce conflict in state 137 resolved as shift.
shift/reduce conflict in state 137 resolved as shift.
shift/reduce conflict in state 137 resolved as shift.
shift/reduce conflict in state 137 resolved as shift.
shift/reduce conflict in state 138 resolved as shift.
shift/reduce conflict in state 138 resolved as shift.
shift/reduce conflict in state 138 resolved as shift.
shift/reduce conflict in state 138 resolved as shift.
shift/reduce conflict in state 138 resolved as shift.
shift/reduce conflict in state 138 resolved as shift.
shift/reduce conflict in state 138 resolved as shift.
shift/reduce conflict in state 138 resolved as shift.
shift/reduce conflict in state 138 resolved as shift.
shift/reduce conflict in state 138 resolved as shift.
shift/reduce conflict in state 138 resolved as shift.
shift/reduce conflict in state 138 resolved as shift.


Unused terminals:


Grammar

Rule 1     declaration -> var_declaration
Rule 2     declaration -> fun_declaration
Rule 3     var_declaration -> type_specifier ID SEMICOLON
Rule 4     var_declaration -> type_specifier var_declaration_list SEMICOLON
Rule 5     var_declaration_list -> var_declaration_list COMMA var EQUAL operation_expression
Rule 6     var_declaration_list -> var EQUAL operation_expression
Rule 7     fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt
Rule 8     type_specifier -> INT
Rule 9     type_specifier -> VOID
Rule 10    type_specifier -> CHAIN
Rule 11    params -> param_list
Rule 12    param_list -> param COMMA param_list
Rule 13    param_list -> param
Rule 14    param_list -> empty
Rule 15    param -> type_specifier ID
Rule 16    compount_stmt -> LBLOCK local_declarations statement_list RBLOCK
Rule 17    local_declarations -> local_declarations var_declaration
Rule 18    local_declarations -> empty
Rule 19    statement_list -> statement_list statement
Rule 20    statement_list -> empty
Rule 21    statement -> expression_stmt
Rule 22    statement -> compount_stmt
Rule 23    statement -> selection_stmt
Rule 24    statement -> iteration_stmt
Rule 25    statement -> return_stmt
Rule 26    expression_stmt -> expression SEMICOLON
Rule 27    expression_stmt -> SEMICOLON
Rule 28    expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON
Rule 29    expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON
Rule 30    expression_stmt -> ID PLUSPLUS
Rule 31    expression_stmt -> PLUSPLUS ID
Rule 32    expression_stmt -> ID MINUSMINUS
Rule 33    expression_stmt -> MINUSMINUS ID
Rule 34    selection_stmt -> IF LPAREN expression RPAREN statement
Rule 35    selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement
Rule 36    iteration_stmt -> WHILE LPAREN expression RPAREN statement
Rule 37    iteration_stmt -> <empty>
Rule 38    iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement
Rule 39    iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
Rule 40    iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
Rule 41    iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
Rule 42    iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
Rule 43    return_stmt -> RETURN SEMICOLON
Rule 44    return_stmt -> RETURN expression SEMICOLON
Rule 45    expression -> var EQUAL expression
Rule 46    expression -> simple_expression
Rule 47    var -> ID
Rule 48    simple_expression -> operation_expression relop operation_expression
Rule 49    simple_expression -> operation_expression
Rule 50    relop -> LESS
Rule 51    relop -> LESSEQUAL
Rule 52    relop -> GREATER
Rule 53    relop -> GREATEREQUAL
Rule 54    relop -> DEQUAL
Rule 55    relop -> DISTINT
Rule 56    relop -> QUOTES
Rule 57    operation_expression -> factor simb_op operation_expression
Rule 58    operation_expression -> factor
Rule 59    simb_op -> addop
Rule 60    simb_op -> mulop
Rule 61    addop -> PLUS
Rule 62    addop -> MINUS
Rule 63    mulop -> TIMES
Rule 64    mulop -> DIVIDE
Rule 65    factor -> LPAREN expression RPAREN
Rule 66    factor -> var
Rule 67    factor -> call
Rule 68    factor -> NUMBER
Rule 69    call -> ID LPAREN args RPAREN
Rule 70    args -> args_list
Rule 71    args -> empty
Rule 72    args_list -> expression COMMA args_list
Rule 73    args_list -> expression
Rule 74    empty -> <empty>

Terminals, with rules where they appear

CHAIN                : 10
COMMA                : 5 12 72
DEQUAL               : 54
DISTINT              : 55
DIVIDE               : 64
ELSE                 : 35
EQUAL                : 5 6 45
FOR                  : 38 39 40 41 42
GREATER              : 52
GREATEREQUAL         : 53
ID                   : 3 7 15 30 31 32 33 47 69
IF                   : 34 35
INT                  : 8
LBLOCK               : 16
LESS                 : 50
LESSEQUAL            : 51
LPAREN               : 7 28 29 34 35 36 38 39 40 41 42 65 69
MINUS                : 62
MINUSMINUS           : 32 33 41 42
NUMBER               : 68
PLUS                 : 61
PLUSPLUS             : 30 31 39 40
PRINT                : 28 29
QUOTES               : 29 29 56
RBLOCK               : 16
RETURN               : 43 44
RPAREN               : 7 28 29 34 35 36 38 39 40 41 42 65 69
SEMICOLON            : 3 4 26 27 28 29 38 38 39 39 40 40 41 41 42 42 43 44
STRING               : 29
TIMES                : 63
VOID                 : 9
WHILE                : 36
error                : 

Nonterminals, with rules where they appear

addop                : 59
args                 : 69
args_list            : 70 72
call                 : 67
compount_stmt        : 7 22
declaration          : 0
empty                : 14 18 20 71
expression           : 26 34 35 36 38 38 39 40 41 42 44 45 65 72 73
expression_stmt      : 21
factor               : 57 58
fun_declaration      : 2
iteration_stmt       : 24
local_declarations   : 16 17
mulop                : 60
operation_expression : 5 6 48 48 49 57
param                : 12 13
param_list           : 11 12
params               : 7
relop                : 48
return_stmt          : 25
selection_stmt       : 23
simb_op              : 57
simple_expression    : 46
statement            : 19 34 35 35 36 38 39 40 41 42
statement_list       : 16 19
type_specifier       : 3 4 7 15
var                  : 5 6 28 38 39 39 40 40 41 41 42 42 45 66
var_declaration      : 1 17
var_declaration_list : 4 5


Parsing method: LALR


state 0

    (0) S' -> . declaration
    (1) declaration -> . var_declaration
    (2) declaration -> . fun_declaration
    (3) var_declaration -> . type_specifier ID SEMICOLON
    (4) var_declaration -> . type_specifier var_declaration_list SEMICOLON
    (7) fun_declaration -> . type_specifier ID LPAREN params RPAREN compount_stmt
    (8) type_specifier -> . INT
    (9) type_specifier -> . VOID
    (10) type_specifier -> . CHAIN

    INT             shift and go to state 4
    VOID            shift and go to state 5
    CHAIN           shift and go to state 2


    type_specifier                 shift and go to state 1
    fun_declaration                shift and go to state 3
    var_declaration                shift and go to state 6
    declaration                    shift and go to state 7

state 1

    (3) var_declaration -> type_specifier . ID SEMICOLON
    (4) var_declaration -> type_specifier . var_declaration_list SEMICOLON
    (7) fun_declaration -> type_specifier . ID LPAREN params RPAREN compount_stmt
    (5) var_declaration_list -> . var_declaration_list COMMA var EQUAL operation_expression
    (6) var_declaration_list -> . var EQUAL operation_expression
    (47) var -> . ID

    ID              shift and go to state 10


    var                            shift and go to state 8
    var_declaration_list           shift and go to state 9

state 2

    (10) type_specifier -> CHAIN .

    ID              reduce using rule 10 (type_specifier -> CHAIN .)



state 3

    (2) declaration -> fun_declaration .

    $end            reduce using rule 2 (declaration -> fun_declaration .)



state 4

    (8) type_specifier -> INT .

    ID              reduce using rule 8 (type_specifier -> INT .)



state 5

    (9) type_specifier -> VOID .

    ID              reduce using rule 9 (type_specifier -> VOID .)



state 6

    (1) declaration -> var_declaration .

    $end            reduce using rule 1 (declaration -> var_declaration .)



state 7

    (0) S' -> declaration .




state 8

    (6) var_declaration_list -> var . EQUAL operation_expression

    EQUAL           shift and go to state 11



state 9

    (4) var_declaration -> type_specifier var_declaration_list . SEMICOLON
    (5) var_declaration_list -> var_declaration_list . COMMA var EQUAL operation_expression

    SEMICOLON       shift and go to state 12
    COMMA           shift and go to state 13



state 10

    (3) var_declaration -> type_specifier ID . SEMICOLON
    (7) fun_declaration -> type_specifier ID . LPAREN params RPAREN compount_stmt
    (47) var -> ID .

    SEMICOLON       shift and go to state 14
    LPAREN          shift and go to state 15
    EQUAL           reduce using rule 47 (var -> ID .)



state 11

    (6) var_declaration_list -> var EQUAL . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (47) var -> . ID
    (69) call -> . ID LPAREN args RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16
    ID              shift and go to state 22


    operation_expression           shift and go to state 17
    factor                         shift and go to state 19
    var                            shift and go to state 20
    call                           shift and go to state 21

state 12

    (4) var_declaration -> type_specifier var_declaration_list SEMICOLON .

    $end            reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    INT             reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    VOID            reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    CHAIN           reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    RBLOCK          reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    SEMICOLON       reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    PRINT           reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    ID              reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    PLUSPLUS        reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    MINUSMINUS      reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    LBLOCK          reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    IF              reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    WHILE           reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    FOR             reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    RETURN          reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    LPAREN          reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)
    NUMBER          reduce using rule 4 (var_declaration -> type_specifier var_declaration_list SEMICOLON .)



state 13

    (5) var_declaration_list -> var_declaration_list COMMA . var EQUAL operation_expression
    (47) var -> . ID

    ID              shift and go to state 24


    var                            shift and go to state 23

state 14

    (3) var_declaration -> type_specifier ID SEMICOLON .

    $end            reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    INT             reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    VOID            reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    CHAIN           reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    RBLOCK          reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    SEMICOLON       reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    PRINT           reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    ID              reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    PLUSPLUS        reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    MINUSMINUS      reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    LBLOCK          reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    IF              reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    WHILE           reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    FOR             reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    RETURN          reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    LPAREN          reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)
    NUMBER          reduce using rule 3 (var_declaration -> type_specifier ID SEMICOLON .)



state 15

    (7) fun_declaration -> type_specifier ID LPAREN . params RPAREN compount_stmt
    (11) params -> . param_list
    (12) param_list -> . param COMMA param_list
    (13) param_list -> . param
    (14) param_list -> . empty
    (15) param -> . type_specifier ID
    (74) empty -> .
    (8) type_specifier -> . INT
    (9) type_specifier -> . VOID
    (10) type_specifier -> . CHAIN

    RPAREN          reduce using rule 74 (empty -> .)
    INT             shift and go to state 4
    VOID            shift and go to state 5
    CHAIN           shift and go to state 2


    type_specifier                 shift and go to state 25
    param_list                     shift and go to state 26
    param                          shift and go to state 27
    params                         shift and go to state 28
    empty                          shift and go to state 29

state 16

    (68) factor -> NUMBER .

    PLUS            reduce using rule 68 (factor -> NUMBER .)
    MINUS           reduce using rule 68 (factor -> NUMBER .)
    TIMES           reduce using rule 68 (factor -> NUMBER .)
    DIVIDE          reduce using rule 68 (factor -> NUMBER .)
    LESS            reduce using rule 68 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 68 (factor -> NUMBER .)
    GREATER         reduce using rule 68 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 68 (factor -> NUMBER .)
    DEQUAL          reduce using rule 68 (factor -> NUMBER .)
    DISTINT         reduce using rule 68 (factor -> NUMBER .)
    QUOTES          reduce using rule 68 (factor -> NUMBER .)
    RPAREN          reduce using rule 68 (factor -> NUMBER .)
    COMMA           reduce using rule 68 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 68 (factor -> NUMBER .)



state 17

    (6) var_declaration_list -> var EQUAL operation_expression .

    SEMICOLON       reduce using rule 6 (var_declaration_list -> var EQUAL operation_expression .)
    COMMA           reduce using rule 6 (var_declaration_list -> var EQUAL operation_expression .)



state 18

    (65) factor -> LPAREN . expression RPAREN
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 22
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16


    operation_expression           shift and go to state 30
    factor                         shift and go to state 19
    var                            shift and go to state 31
    call                           shift and go to state 21
    simple_expression              shift and go to state 32
    expression                     shift and go to state 33

state 19

    (57) operation_expression -> factor . simb_op operation_expression
    (58) operation_expression -> factor .
    (59) simb_op -> . addop
    (60) simb_op -> . mulop
    (61) addop -> . PLUS
    (62) addop -> . MINUS
    (63) mulop -> . TIMES
    (64) mulop -> . DIVIDE

    LESS            reduce using rule 58 (operation_expression -> factor .)
    LESSEQUAL       reduce using rule 58 (operation_expression -> factor .)
    GREATER         reduce using rule 58 (operation_expression -> factor .)
    GREATEREQUAL    reduce using rule 58 (operation_expression -> factor .)
    DEQUAL          reduce using rule 58 (operation_expression -> factor .)
    DISTINT         reduce using rule 58 (operation_expression -> factor .)
    QUOTES          reduce using rule 58 (operation_expression -> factor .)
    SEMICOLON       reduce using rule 58 (operation_expression -> factor .)
    RPAREN          reduce using rule 58 (operation_expression -> factor .)
    COMMA           reduce using rule 58 (operation_expression -> factor .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 40
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 35


    addop                          shift and go to state 34
    simb_op                        shift and go to state 39
    mulop                          shift and go to state 38

state 20

    (66) factor -> var .

    PLUS            reduce using rule 66 (factor -> var .)
    MINUS           reduce using rule 66 (factor -> var .)
    TIMES           reduce using rule 66 (factor -> var .)
    DIVIDE          reduce using rule 66 (factor -> var .)
    SEMICOLON       reduce using rule 66 (factor -> var .)
    COMMA           reduce using rule 66 (factor -> var .)
    LESS            reduce using rule 66 (factor -> var .)
    LESSEQUAL       reduce using rule 66 (factor -> var .)
    GREATER         reduce using rule 66 (factor -> var .)
    GREATEREQUAL    reduce using rule 66 (factor -> var .)
    DEQUAL          reduce using rule 66 (factor -> var .)
    DISTINT         reduce using rule 66 (factor -> var .)
    QUOTES          reduce using rule 66 (factor -> var .)
    RPAREN          reduce using rule 66 (factor -> var .)



state 21

    (67) factor -> call .

    PLUS            reduce using rule 67 (factor -> call .)
    MINUS           reduce using rule 67 (factor -> call .)
    TIMES           reduce using rule 67 (factor -> call .)
    DIVIDE          reduce using rule 67 (factor -> call .)
    LESS            reduce using rule 67 (factor -> call .)
    LESSEQUAL       reduce using rule 67 (factor -> call .)
    GREATER         reduce using rule 67 (factor -> call .)
    GREATEREQUAL    reduce using rule 67 (factor -> call .)
    DEQUAL          reduce using rule 67 (factor -> call .)
    DISTINT         reduce using rule 67 (factor -> call .)
    QUOTES          reduce using rule 67 (factor -> call .)
    RPAREN          reduce using rule 67 (factor -> call .)
    COMMA           reduce using rule 67 (factor -> call .)
    SEMICOLON       reduce using rule 67 (factor -> call .)



state 22

    (47) var -> ID .
    (69) call -> ID . LPAREN args RPAREN

    EQUAL           reduce using rule 47 (var -> ID .)
    PLUS            reduce using rule 47 (var -> ID .)
    MINUS           reduce using rule 47 (var -> ID .)
    TIMES           reduce using rule 47 (var -> ID .)
    DIVIDE          reduce using rule 47 (var -> ID .)
    LESS            reduce using rule 47 (var -> ID .)
    LESSEQUAL       reduce using rule 47 (var -> ID .)
    GREATER         reduce using rule 47 (var -> ID .)
    GREATEREQUAL    reduce using rule 47 (var -> ID .)
    DEQUAL          reduce using rule 47 (var -> ID .)
    DISTINT         reduce using rule 47 (var -> ID .)
    QUOTES          reduce using rule 47 (var -> ID .)
    RPAREN          reduce using rule 47 (var -> ID .)
    COMMA           reduce using rule 47 (var -> ID .)
    SEMICOLON       reduce using rule 47 (var -> ID .)
    PLUSPLUS        reduce using rule 47 (var -> ID .)
    MINUSMINUS      reduce using rule 47 (var -> ID .)
    LPAREN          shift and go to state 41



state 23

    (5) var_declaration_list -> var_declaration_list COMMA var . EQUAL operation_expression

    EQUAL           shift and go to state 42



state 24

    (47) var -> ID .

    EQUAL           reduce using rule 47 (var -> ID .)
    SEMICOLON       reduce using rule 47 (var -> ID .)
    RPAREN          reduce using rule 47 (var -> ID .)



state 25

    (15) param -> type_specifier . ID

    ID              shift and go to state 43



state 26

    (11) params -> param_list .

    RPAREN          reduce using rule 11 (params -> param_list .)



state 27

    (12) param_list -> param . COMMA param_list
    (13) param_list -> param .

    COMMA           shift and go to state 44
    RPAREN          reduce using rule 13 (param_list -> param .)



state 28

    (7) fun_declaration -> type_specifier ID LPAREN params . RPAREN compount_stmt

    RPAREN          shift and go to state 45



state 29

    (14) param_list -> empty .

    RPAREN          reduce using rule 14 (param_list -> empty .)



state 30

    (48) simple_expression -> operation_expression . relop operation_expression
    (49) simple_expression -> operation_expression .
    (50) relop -> . LESS
    (51) relop -> . LESSEQUAL
    (52) relop -> . GREATER
    (53) relop -> . GREATEREQUAL
    (54) relop -> . DEQUAL
    (55) relop -> . DISTINT
    (56) relop -> . QUOTES

    SEMICOLON       reduce using rule 49 (simple_expression -> operation_expression .)
    RPAREN          reduce using rule 49 (simple_expression -> operation_expression .)
    COMMA           reduce using rule 49 (simple_expression -> operation_expression .)
    LESS            shift and go to state 48
    LESSEQUAL       shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 46
    DEQUAL          shift and go to state 49
    DISTINT         shift and go to state 50
    QUOTES          shift and go to state 51


    relop                          shift and go to state 47

state 31

    (45) expression -> var . EQUAL expression
    (66) factor -> var .

    EQUAL           shift and go to state 54
    PLUS            reduce using rule 66 (factor -> var .)
    MINUS           reduce using rule 66 (factor -> var .)
    TIMES           reduce using rule 66 (factor -> var .)
    DIVIDE          reduce using rule 66 (factor -> var .)
    LESS            reduce using rule 66 (factor -> var .)
    LESSEQUAL       reduce using rule 66 (factor -> var .)
    GREATER         reduce using rule 66 (factor -> var .)
    GREATEREQUAL    reduce using rule 66 (factor -> var .)
    DEQUAL          reduce using rule 66 (factor -> var .)
    DISTINT         reduce using rule 66 (factor -> var .)
    QUOTES          reduce using rule 66 (factor -> var .)
    RPAREN          reduce using rule 66 (factor -> var .)
    COMMA           reduce using rule 66 (factor -> var .)
    SEMICOLON       reduce using rule 66 (factor -> var .)



state 32

    (46) expression -> simple_expression .

    COMMA           reduce using rule 46 (expression -> simple_expression .)
    RPAREN          reduce using rule 46 (expression -> simple_expression .)
    SEMICOLON       reduce using rule 46 (expression -> simple_expression .)



state 33

    (65) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 55



state 34

    (59) simb_op -> addop .

    LPAREN          reduce using rule 59 (simb_op -> addop .)
    NUMBER          reduce using rule 59 (simb_op -> addop .)
    ID              reduce using rule 59 (simb_op -> addop .)



state 35

    (64) mulop -> DIVIDE .

    LPAREN          reduce using rule 64 (mulop -> DIVIDE .)
    NUMBER          reduce using rule 64 (mulop -> DIVIDE .)
    ID              reduce using rule 64 (mulop -> DIVIDE .)



state 36

    (63) mulop -> TIMES .

    LPAREN          reduce using rule 63 (mulop -> TIMES .)
    NUMBER          reduce using rule 63 (mulop -> TIMES .)
    ID              reduce using rule 63 (mulop -> TIMES .)



state 37

    (61) addop -> PLUS .

    LPAREN          reduce using rule 61 (addop -> PLUS .)
    NUMBER          reduce using rule 61 (addop -> PLUS .)
    ID              reduce using rule 61 (addop -> PLUS .)



state 38

    (60) simb_op -> mulop .

    LPAREN          reduce using rule 60 (simb_op -> mulop .)
    NUMBER          reduce using rule 60 (simb_op -> mulop .)
    ID              reduce using rule 60 (simb_op -> mulop .)



state 39

    (57) operation_expression -> factor simb_op . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (47) var -> . ID
    (69) call -> . ID LPAREN args RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16
    ID              shift and go to state 22


    operation_expression           shift and go to state 56
    factor                         shift and go to state 19
    var                            shift and go to state 20
    call                           shift and go to state 21

state 40

    (62) addop -> MINUS .

    LPAREN          reduce using rule 62 (addop -> MINUS .)
    NUMBER          reduce using rule 62 (addop -> MINUS .)
    ID              reduce using rule 62 (addop -> MINUS .)



state 41

    (69) call -> ID LPAREN . args RPAREN
    (70) args -> . args_list
    (71) args -> . empty
    (72) args_list -> . expression COMMA args_list
    (73) args_list -> . expression
    (74) empty -> .
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

    RPAREN          reduce using rule 74 (empty -> .)
    ID              shift and go to state 22
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16


    args                           shift and go to state 57
    args_list                      shift and go to state 58
    operation_expression           shift and go to state 30
    factor                         shift and go to state 19
    var                            shift and go to state 31
    call                           shift and go to state 21
    simple_expression              shift and go to state 32
    expression                     shift and go to state 59
    empty                          shift and go to state 60

state 42

    (5) var_declaration_list -> var_declaration_list COMMA var EQUAL . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (47) var -> . ID
    (69) call -> . ID LPAREN args RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16
    ID              shift and go to state 22


    call                           shift and go to state 21
    operation_expression           shift and go to state 61
    factor                         shift and go to state 19
    var                            shift and go to state 20

state 43

    (15) param -> type_specifier ID .

    COMMA           reduce using rule 15 (param -> type_specifier ID .)
    RPAREN          reduce using rule 15 (param -> type_specifier ID .)



state 44

    (12) param_list -> param COMMA . param_list
    (12) param_list -> . param COMMA param_list
    (13) param_list -> . param
    (14) param_list -> . empty
    (15) param -> . type_specifier ID
    (74) empty -> .
    (8) type_specifier -> . INT
    (9) type_specifier -> . VOID
    (10) type_specifier -> . CHAIN

    RPAREN          reduce using rule 74 (empty -> .)
    INT             shift and go to state 4
    VOID            shift and go to state 5
    CHAIN           shift and go to state 2


    param_list                     shift and go to state 62
    type_specifier                 shift and go to state 25
    empty                          shift and go to state 29
    param                          shift and go to state 27

state 45

    (7) fun_declaration -> type_specifier ID LPAREN params RPAREN . compount_stmt
    (16) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK

    LBLOCK          shift and go to state 64


    compount_stmt                  shift and go to state 63

state 46

    (53) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 53 (relop -> GREATEREQUAL .)
    NUMBER          reduce using rule 53 (relop -> GREATEREQUAL .)
    ID              reduce using rule 53 (relop -> GREATEREQUAL .)



state 47

    (48) simple_expression -> operation_expression relop . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (47) var -> . ID
    (69) call -> . ID LPAREN args RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16
    ID              shift and go to state 22


    operation_expression           shift and go to state 65
    factor                         shift and go to state 19
    var                            shift and go to state 20
    call                           shift and go to state 21

state 48

    (50) relop -> LESS .

    LPAREN          reduce using rule 50 (relop -> LESS .)
    NUMBER          reduce using rule 50 (relop -> LESS .)
    ID              reduce using rule 50 (relop -> LESS .)



state 49

    (54) relop -> DEQUAL .

    LPAREN          reduce using rule 54 (relop -> DEQUAL .)
    NUMBER          reduce using rule 54 (relop -> DEQUAL .)
    ID              reduce using rule 54 (relop -> DEQUAL .)



state 50

    (55) relop -> DISTINT .

    LPAREN          reduce using rule 55 (relop -> DISTINT .)
    NUMBER          reduce using rule 55 (relop -> DISTINT .)
    ID              reduce using rule 55 (relop -> DISTINT .)



state 51

    (56) relop -> QUOTES .

    LPAREN          reduce using rule 56 (relop -> QUOTES .)
    NUMBER          reduce using rule 56 (relop -> QUOTES .)
    ID              reduce using rule 56 (relop -> QUOTES .)



state 52

    (51) relop -> LESSEQUAL .

    LPAREN          reduce using rule 51 (relop -> LESSEQUAL .)
    NUMBER          reduce using rule 51 (relop -> LESSEQUAL .)
    ID              reduce using rule 51 (relop -> LESSEQUAL .)



state 53

    (52) relop -> GREATER .

    LPAREN          reduce using rule 52 (relop -> GREATER .)
    NUMBER          reduce using rule 52 (relop -> GREATER .)
    ID              reduce using rule 52 (relop -> GREATER .)



state 54

    (45) expression -> var EQUAL . expression
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 22
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16


    operation_expression           shift and go to state 30
    factor                         shift and go to state 19
    var                            shift and go to state 31
    call                           shift and go to state 21
    simple_expression              shift and go to state 32
    expression                     shift and go to state 66

state 55

    (65) factor -> LPAREN expression RPAREN .

    PLUS            reduce using rule 65 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 65 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 65 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 65 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 65 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 65 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 65 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 65 (factor -> LPAREN expression RPAREN .)
    DEQUAL          reduce using rule 65 (factor -> LPAREN expression RPAREN .)
    DISTINT         reduce using rule 65 (factor -> LPAREN expression RPAREN .)
    QUOTES          reduce using rule 65 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 65 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 65 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 65 (factor -> LPAREN expression RPAREN .)



state 56

    (57) operation_expression -> factor simb_op operation_expression .

    LESS            reduce using rule 57 (operation_expression -> factor simb_op operation_expression .)
    LESSEQUAL       reduce using rule 57 (operation_expression -> factor simb_op operation_expression .)
    GREATER         reduce using rule 57 (operation_expression -> factor simb_op operation_expression .)
    GREATEREQUAL    reduce using rule 57 (operation_expression -> factor simb_op operation_expression .)
    DEQUAL          reduce using rule 57 (operation_expression -> factor simb_op operation_expression .)
    DISTINT         reduce using rule 57 (operation_expression -> factor simb_op operation_expression .)
    QUOTES          reduce using rule 57 (operation_expression -> factor simb_op operation_expression .)
    SEMICOLON       reduce using rule 57 (operation_expression -> factor simb_op operation_expression .)
    RPAREN          reduce using rule 57 (operation_expression -> factor simb_op operation_expression .)
    COMMA           reduce using rule 57 (operation_expression -> factor simb_op operation_expression .)



state 57

    (69) call -> ID LPAREN args . RPAREN

    RPAREN          shift and go to state 67



state 58

    (70) args -> args_list .

    RPAREN          reduce using rule 70 (args -> args_list .)



state 59

    (72) args_list -> expression . COMMA args_list
    (73) args_list -> expression .

    COMMA           shift and go to state 68
    RPAREN          reduce using rule 73 (args_list -> expression .)



state 60

    (71) args -> empty .

    RPAREN          reduce using rule 71 (args -> empty .)



state 61

    (5) var_declaration_list -> var_declaration_list COMMA var EQUAL operation_expression .

    SEMICOLON       reduce using rule 5 (var_declaration_list -> var_declaration_list COMMA var EQUAL operation_expression .)
    COMMA           reduce using rule 5 (var_declaration_list -> var_declaration_list COMMA var EQUAL operation_expression .)



state 62

    (12) param_list -> param COMMA param_list .

    RPAREN          reduce using rule 12 (param_list -> param COMMA param_list .)



state 63

    (7) fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt .

    $end            reduce using rule 7 (fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt .)



state 64

    (16) compount_stmt -> LBLOCK . local_declarations statement_list RBLOCK
    (17) local_declarations -> . local_declarations var_declaration
    (18) local_declarations -> . empty
    (74) empty -> .

    INT             reduce using rule 74 (empty -> .)
    VOID            reduce using rule 74 (empty -> .)
    CHAIN           reduce using rule 74 (empty -> .)
    RBLOCK          reduce using rule 74 (empty -> .)
    SEMICOLON       reduce using rule 74 (empty -> .)
    PRINT           reduce using rule 74 (empty -> .)
    ID              reduce using rule 74 (empty -> .)
    PLUSPLUS        reduce using rule 74 (empty -> .)
    MINUSMINUS      reduce using rule 74 (empty -> .)
    LBLOCK          reduce using rule 74 (empty -> .)
    IF              reduce using rule 74 (empty -> .)
    WHILE           reduce using rule 74 (empty -> .)
    FOR             reduce using rule 74 (empty -> .)
    RETURN          reduce using rule 74 (empty -> .)
    LPAREN          reduce using rule 74 (empty -> .)
    NUMBER          reduce using rule 74 (empty -> .)


    local_declarations             shift and go to state 69
    empty                          shift and go to state 70

state 65

    (48) simple_expression -> operation_expression relop operation_expression .

    SEMICOLON       reduce using rule 48 (simple_expression -> operation_expression relop operation_expression .)
    RPAREN          reduce using rule 48 (simple_expression -> operation_expression relop operation_expression .)
    COMMA           reduce using rule 48 (simple_expression -> operation_expression relop operation_expression .)



state 66

    (45) expression -> var EQUAL expression .

    COMMA           reduce using rule 45 (expression -> var EQUAL expression .)
    RPAREN          reduce using rule 45 (expression -> var EQUAL expression .)
    SEMICOLON       reduce using rule 45 (expression -> var EQUAL expression .)



state 67

    (69) call -> ID LPAREN args RPAREN .

    PLUS            reduce using rule 69 (call -> ID LPAREN args RPAREN .)
    MINUS           reduce using rule 69 (call -> ID LPAREN args RPAREN .)
    TIMES           reduce using rule 69 (call -> ID LPAREN args RPAREN .)
    DIVIDE          reduce using rule 69 (call -> ID LPAREN args RPAREN .)
    LESS            reduce using rule 69 (call -> ID LPAREN args RPAREN .)
    LESSEQUAL       reduce using rule 69 (call -> ID LPAREN args RPAREN .)
    GREATER         reduce using rule 69 (call -> ID LPAREN args RPAREN .)
    GREATEREQUAL    reduce using rule 69 (call -> ID LPAREN args RPAREN .)
    DEQUAL          reduce using rule 69 (call -> ID LPAREN args RPAREN .)
    DISTINT         reduce using rule 69 (call -> ID LPAREN args RPAREN .)
    QUOTES          reduce using rule 69 (call -> ID LPAREN args RPAREN .)
    SEMICOLON       reduce using rule 69 (call -> ID LPAREN args RPAREN .)
    RPAREN          reduce using rule 69 (call -> ID LPAREN args RPAREN .)
    COMMA           reduce using rule 69 (call -> ID LPAREN args RPAREN .)



state 68

    (72) args_list -> expression COMMA . args_list
    (72) args_list -> . expression COMMA args_list
    (73) args_list -> . expression
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 22
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16


    args_list                      shift and go to state 71
    operation_expression           shift and go to state 30
    factor                         shift and go to state 19
    var                            shift and go to state 31
    call                           shift and go to state 21
    simple_expression              shift and go to state 32
    expression                     shift and go to state 59

state 69

    (16) compount_stmt -> LBLOCK local_declarations . statement_list RBLOCK
    (17) local_declarations -> local_declarations . var_declaration
    (19) statement_list -> . statement_list statement
    (20) statement_list -> . empty
    (3) var_declaration -> . type_specifier ID SEMICOLON
    (4) var_declaration -> . type_specifier var_declaration_list SEMICOLON
    (74) empty -> .
    (8) type_specifier -> . INT
    (9) type_specifier -> . VOID
    (10) type_specifier -> . CHAIN

    RBLOCK          reduce using rule 74 (empty -> .)
    SEMICOLON       reduce using rule 74 (empty -> .)
    PRINT           reduce using rule 74 (empty -> .)
    ID              reduce using rule 74 (empty -> .)
    PLUSPLUS        reduce using rule 74 (empty -> .)
    MINUSMINUS      reduce using rule 74 (empty -> .)
    LBLOCK          reduce using rule 74 (empty -> .)
    IF              reduce using rule 74 (empty -> .)
    WHILE           reduce using rule 74 (empty -> .)
    FOR             reduce using rule 74 (empty -> .)
    RETURN          reduce using rule 74 (empty -> .)
    LPAREN          reduce using rule 74 (empty -> .)
    NUMBER          reduce using rule 74 (empty -> .)
    INT             shift and go to state 4
    VOID            shift and go to state 5
    CHAIN           shift and go to state 2


    type_specifier                 shift and go to state 72
    var_declaration                shift and go to state 73
    statement_list                 shift and go to state 74
    empty                          shift and go to state 75

state 70

    (18) local_declarations -> empty .

    INT             reduce using rule 18 (local_declarations -> empty .)
    VOID            reduce using rule 18 (local_declarations -> empty .)
    CHAIN           reduce using rule 18 (local_declarations -> empty .)
    RBLOCK          reduce using rule 18 (local_declarations -> empty .)
    SEMICOLON       reduce using rule 18 (local_declarations -> empty .)
    PRINT           reduce using rule 18 (local_declarations -> empty .)
    ID              reduce using rule 18 (local_declarations -> empty .)
    PLUSPLUS        reduce using rule 18 (local_declarations -> empty .)
    MINUSMINUS      reduce using rule 18 (local_declarations -> empty .)
    LBLOCK          reduce using rule 18 (local_declarations -> empty .)
    IF              reduce using rule 18 (local_declarations -> empty .)
    WHILE           reduce using rule 18 (local_declarations -> empty .)
    FOR             reduce using rule 18 (local_declarations -> empty .)
    RETURN          reduce using rule 18 (local_declarations -> empty .)
    LPAREN          reduce using rule 18 (local_declarations -> empty .)
    NUMBER          reduce using rule 18 (local_declarations -> empty .)



state 71

    (72) args_list -> expression COMMA args_list .

    RPAREN          reduce using rule 72 (args_list -> expression COMMA args_list .)



state 72

    (3) var_declaration -> type_specifier . ID SEMICOLON
    (4) var_declaration -> type_specifier . var_declaration_list SEMICOLON
    (5) var_declaration_list -> . var_declaration_list COMMA var EQUAL operation_expression
    (6) var_declaration_list -> . var EQUAL operation_expression
    (47) var -> . ID

    ID              shift and go to state 76


    var                            shift and go to state 8
    var_declaration_list           shift and go to state 9

state 73

    (17) local_declarations -> local_declarations var_declaration .

    INT             reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    VOID            reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    CHAIN           reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    RBLOCK          reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    SEMICOLON       reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    PRINT           reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    ID              reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    PLUSPLUS        reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    MINUSMINUS      reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    LBLOCK          reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    IF              reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    WHILE           reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    FOR             reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    RETURN          reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    LPAREN          reduce using rule 17 (local_declarations -> local_declarations var_declaration .)
    NUMBER          reduce using rule 17 (local_declarations -> local_declarations var_declaration .)



state 74

    (16) compount_stmt -> LBLOCK local_declarations statement_list . RBLOCK
    (19) statement_list -> statement_list . statement
    (21) statement -> . expression_stmt
    (22) statement -> . compount_stmt
    (23) statement -> . selection_stmt
    (24) statement -> . iteration_stmt
    (25) statement -> . return_stmt
    (26) expression_stmt -> . expression SEMICOLON
    (27) expression_stmt -> . SEMICOLON
    (28) expression_stmt -> . PRINT LPAREN var RPAREN SEMICOLON
    (29) expression_stmt -> . PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON
    (30) expression_stmt -> . ID PLUSPLUS
    (31) expression_stmt -> . PLUSPLUS ID
    (32) expression_stmt -> . ID MINUSMINUS
    (33) expression_stmt -> . MINUSMINUS ID
    (16) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (34) selection_stmt -> . IF LPAREN expression RPAREN statement
    (35) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (37) iteration_stmt -> .
    (38) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (43) return_stmt -> . RETURN SEMICOLON
    (44) return_stmt -> . RETURN expression SEMICOLON
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for RBLOCK resolved as shift.
  ! shift/reduce conflict for SEMICOLON resolved as shift.
  ! shift/reduce conflict for PRINT resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for PLUSPLUS resolved as shift.
  ! shift/reduce conflict for MINUSMINUS resolved as shift.
  ! shift/reduce conflict for LBLOCK resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for WHILE resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for LPAREN resolved as shift.
  ! shift/reduce conflict for NUMBER resolved as shift.
    RBLOCK          shift and go to state 91
    SEMICOLON       shift and go to state 81
    PRINT           shift and go to state 80
    ID              shift and go to state 89
    PLUSPLUS        shift and go to state 86
    MINUSMINUS      shift and go to state 88
    LBLOCK          shift and go to state 64
    IF              shift and go to state 90
    WHILE           shift and go to state 78
    FOR             shift and go to state 85
    RETURN          shift and go to state 77
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16

  ! RBLOCK          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! SEMICOLON       [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PRINT           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 37 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 37 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 37 (iteration_stmt -> .) ]

    operation_expression           shift and go to state 30
    return_stmt                    shift and go to state 79
    call                           shift and go to state 21
    factor                         shift and go to state 19
    compount_stmt                  shift and go to state 87
    iteration_stmt                 shift and go to state 92
    var                            shift and go to state 31
    expression_stmt                shift and go to state 82
    statement                      shift and go to state 83
    selection_stmt                 shift and go to state 84
    simple_expression              shift and go to state 32
    expression                     shift and go to state 93

state 75

    (20) statement_list -> empty .

    RBLOCK          reduce using rule 20 (statement_list -> empty .)
    SEMICOLON       reduce using rule 20 (statement_list -> empty .)
    PRINT           reduce using rule 20 (statement_list -> empty .)
    ID              reduce using rule 20 (statement_list -> empty .)
    PLUSPLUS        reduce using rule 20 (statement_list -> empty .)
    MINUSMINUS      reduce using rule 20 (statement_list -> empty .)
    LBLOCK          reduce using rule 20 (statement_list -> empty .)
    IF              reduce using rule 20 (statement_list -> empty .)
    WHILE           reduce using rule 20 (statement_list -> empty .)
    FOR             reduce using rule 20 (statement_list -> empty .)
    RETURN          reduce using rule 20 (statement_list -> empty .)
    LPAREN          reduce using rule 20 (statement_list -> empty .)
    NUMBER          reduce using rule 20 (statement_list -> empty .)



state 76

    (3) var_declaration -> type_specifier ID . SEMICOLON
    (47) var -> ID .

    SEMICOLON       shift and go to state 14
    EQUAL           reduce using rule 47 (var -> ID .)



state 77

    (43) return_stmt -> RETURN . SEMICOLON
    (44) return_stmt -> RETURN . expression SEMICOLON
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

    SEMICOLON       shift and go to state 94
    ID              shift and go to state 22
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16


    operation_expression           shift and go to state 30
    factor                         shift and go to state 19
    var                            shift and go to state 31
    call                           shift and go to state 21
    simple_expression              shift and go to state 32
    expression                     shift and go to state 95

state 78

    (36) iteration_stmt -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 96



state 79

    (25) statement -> return_stmt .

    RBLOCK          reduce using rule 25 (statement -> return_stmt .)
    SEMICOLON       reduce using rule 25 (statement -> return_stmt .)
    PRINT           reduce using rule 25 (statement -> return_stmt .)
    ID              reduce using rule 25 (statement -> return_stmt .)
    PLUSPLUS        reduce using rule 25 (statement -> return_stmt .)
    MINUSMINUS      reduce using rule 25 (statement -> return_stmt .)
    LBLOCK          reduce using rule 25 (statement -> return_stmt .)
    IF              reduce using rule 25 (statement -> return_stmt .)
    WHILE           reduce using rule 25 (statement -> return_stmt .)
    FOR             reduce using rule 25 (statement -> return_stmt .)
    RETURN          reduce using rule 25 (statement -> return_stmt .)
    LPAREN          reduce using rule 25 (statement -> return_stmt .)
    NUMBER          reduce using rule 25 (statement -> return_stmt .)
    ELSE            reduce using rule 25 (statement -> return_stmt .)



state 80

    (28) expression_stmt -> PRINT . LPAREN var RPAREN SEMICOLON
    (29) expression_stmt -> PRINT . LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON

    LPAREN          shift and go to state 97



state 81

    (27) expression_stmt -> SEMICOLON .

    RBLOCK          reduce using rule 27 (expression_stmt -> SEMICOLON .)
    SEMICOLON       reduce using rule 27 (expression_stmt -> SEMICOLON .)
    PRINT           reduce using rule 27 (expression_stmt -> SEMICOLON .)
    ID              reduce using rule 27 (expression_stmt -> SEMICOLON .)
    PLUSPLUS        reduce using rule 27 (expression_stmt -> SEMICOLON .)
    MINUSMINUS      reduce using rule 27 (expression_stmt -> SEMICOLON .)
    LBLOCK          reduce using rule 27 (expression_stmt -> SEMICOLON .)
    IF              reduce using rule 27 (expression_stmt -> SEMICOLON .)
    WHILE           reduce using rule 27 (expression_stmt -> SEMICOLON .)
    FOR             reduce using rule 27 (expression_stmt -> SEMICOLON .)
    RETURN          reduce using rule 27 (expression_stmt -> SEMICOLON .)
    LPAREN          reduce using rule 27 (expression_stmt -> SEMICOLON .)
    NUMBER          reduce using rule 27 (expression_stmt -> SEMICOLON .)
    ELSE            reduce using rule 27 (expression_stmt -> SEMICOLON .)



state 82

    (21) statement -> expression_stmt .

    RBLOCK          reduce using rule 21 (statement -> expression_stmt .)
    SEMICOLON       reduce using rule 21 (statement -> expression_stmt .)
    PRINT           reduce using rule 21 (statement -> expression_stmt .)
    ID              reduce using rule 21 (statement -> expression_stmt .)
    PLUSPLUS        reduce using rule 21 (statement -> expression_stmt .)
    MINUSMINUS      reduce using rule 21 (statement -> expression_stmt .)
    LBLOCK          reduce using rule 21 (statement -> expression_stmt .)
    IF              reduce using rule 21 (statement -> expression_stmt .)
    WHILE           reduce using rule 21 (statement -> expression_stmt .)
    FOR             reduce using rule 21 (statement -> expression_stmt .)
    RETURN          reduce using rule 21 (statement -> expression_stmt .)
    LPAREN          reduce using rule 21 (statement -> expression_stmt .)
    NUMBER          reduce using rule 21 (statement -> expression_stmt .)
    ELSE            reduce using rule 21 (statement -> expression_stmt .)



state 83

    (19) statement_list -> statement_list statement .

    RBLOCK          reduce using rule 19 (statement_list -> statement_list statement .)
    SEMICOLON       reduce using rule 19 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 19 (statement_list -> statement_list statement .)
    ID              reduce using rule 19 (statement_list -> statement_list statement .)
    PLUSPLUS        reduce using rule 19 (statement_list -> statement_list statement .)
    MINUSMINUS      reduce using rule 19 (statement_list -> statement_list statement .)
    LBLOCK          reduce using rule 19 (statement_list -> statement_list statement .)
    IF              reduce using rule 19 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 19 (statement_list -> statement_list statement .)
    FOR             reduce using rule 19 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 19 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 19 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 19 (statement_list -> statement_list statement .)



state 84

    (23) statement -> selection_stmt .

    RBLOCK          reduce using rule 23 (statement -> selection_stmt .)
    SEMICOLON       reduce using rule 23 (statement -> selection_stmt .)
    PRINT           reduce using rule 23 (statement -> selection_stmt .)
    ID              reduce using rule 23 (statement -> selection_stmt .)
    PLUSPLUS        reduce using rule 23 (statement -> selection_stmt .)
    MINUSMINUS      reduce using rule 23 (statement -> selection_stmt .)
    LBLOCK          reduce using rule 23 (statement -> selection_stmt .)
    IF              reduce using rule 23 (statement -> selection_stmt .)
    WHILE           reduce using rule 23 (statement -> selection_stmt .)
    FOR             reduce using rule 23 (statement -> selection_stmt .)
    RETURN          reduce using rule 23 (statement -> selection_stmt .)
    LPAREN          reduce using rule 23 (statement -> selection_stmt .)
    NUMBER          reduce using rule 23 (statement -> selection_stmt .)
    ELSE            reduce using rule 23 (statement -> selection_stmt .)



state 85

    (38) iteration_stmt -> FOR . LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> FOR . LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> FOR . LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> FOR . LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> FOR . LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement

    LPAREN          shift and go to state 98



state 86

    (31) expression_stmt -> PLUSPLUS . ID

    ID              shift and go to state 99



state 87

    (22) statement -> compount_stmt .

    RBLOCK          reduce using rule 22 (statement -> compount_stmt .)
    SEMICOLON       reduce using rule 22 (statement -> compount_stmt .)
    PRINT           reduce using rule 22 (statement -> compount_stmt .)
    ID              reduce using rule 22 (statement -> compount_stmt .)
    PLUSPLUS        reduce using rule 22 (statement -> compount_stmt .)
    MINUSMINUS      reduce using rule 22 (statement -> compount_stmt .)
    LBLOCK          reduce using rule 22 (statement -> compount_stmt .)
    IF              reduce using rule 22 (statement -> compount_stmt .)
    WHILE           reduce using rule 22 (statement -> compount_stmt .)
    FOR             reduce using rule 22 (statement -> compount_stmt .)
    RETURN          reduce using rule 22 (statement -> compount_stmt .)
    LPAREN          reduce using rule 22 (statement -> compount_stmt .)
    NUMBER          reduce using rule 22 (statement -> compount_stmt .)
    ELSE            reduce using rule 22 (statement -> compount_stmt .)



state 88

    (33) expression_stmt -> MINUSMINUS . ID

    ID              shift and go to state 100



state 89

    (30) expression_stmt -> ID . PLUSPLUS
    (32) expression_stmt -> ID . MINUSMINUS
    (47) var -> ID .
    (69) call -> ID . LPAREN args RPAREN

    PLUSPLUS        shift and go to state 101
    MINUSMINUS      shift and go to state 102
    EQUAL           reduce using rule 47 (var -> ID .)
    PLUS            reduce using rule 47 (var -> ID .)
    MINUS           reduce using rule 47 (var -> ID .)
    TIMES           reduce using rule 47 (var -> ID .)
    DIVIDE          reduce using rule 47 (var -> ID .)
    LESS            reduce using rule 47 (var -> ID .)
    LESSEQUAL       reduce using rule 47 (var -> ID .)
    GREATER         reduce using rule 47 (var -> ID .)
    GREATEREQUAL    reduce using rule 47 (var -> ID .)
    DEQUAL          reduce using rule 47 (var -> ID .)
    DISTINT         reduce using rule 47 (var -> ID .)
    QUOTES          reduce using rule 47 (var -> ID .)
    SEMICOLON       reduce using rule 47 (var -> ID .)
    LPAREN          shift and go to state 41



state 90

    (34) selection_stmt -> IF . LPAREN expression RPAREN statement
    (35) selection_stmt -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 103



state 91

    (16) compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .

    RBLOCK          reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    SEMICOLON       reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    PRINT           reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    ID              reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    PLUSPLUS        reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    MINUSMINUS      reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    LBLOCK          reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    IF              reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    WHILE           reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    FOR             reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    RETURN          reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    LPAREN          reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    NUMBER          reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    ELSE            reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    $end            reduce using rule 16 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)



state 92

    (24) statement -> iteration_stmt .

    RBLOCK          reduce using rule 24 (statement -> iteration_stmt .)
    SEMICOLON       reduce using rule 24 (statement -> iteration_stmt .)
    PRINT           reduce using rule 24 (statement -> iteration_stmt .)
    ID              reduce using rule 24 (statement -> iteration_stmt .)
    PLUSPLUS        reduce using rule 24 (statement -> iteration_stmt .)
    MINUSMINUS      reduce using rule 24 (statement -> iteration_stmt .)
    LBLOCK          reduce using rule 24 (statement -> iteration_stmt .)
    IF              reduce using rule 24 (statement -> iteration_stmt .)
    WHILE           reduce using rule 24 (statement -> iteration_stmt .)
    FOR             reduce using rule 24 (statement -> iteration_stmt .)
    RETURN          reduce using rule 24 (statement -> iteration_stmt .)
    LPAREN          reduce using rule 24 (statement -> iteration_stmt .)
    NUMBER          reduce using rule 24 (statement -> iteration_stmt .)
    ELSE            reduce using rule 24 (statement -> iteration_stmt .)



state 93

    (26) expression_stmt -> expression . SEMICOLON

    SEMICOLON       shift and go to state 104



state 94

    (43) return_stmt -> RETURN SEMICOLON .

    RBLOCK          reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)
    SEMICOLON       reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)
    PRINT           reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)
    ID              reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)
    PLUSPLUS        reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)
    MINUSMINUS      reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)
    LBLOCK          reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)
    IF              reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)
    WHILE           reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)
    FOR             reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)
    RETURN          reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)
    ELSE            reduce using rule 43 (return_stmt -> RETURN SEMICOLON .)



state 95

    (44) return_stmt -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 105



state 96

    (36) iteration_stmt -> WHILE LPAREN . expression RPAREN statement
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 22
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16


    operation_expression           shift and go to state 30
    factor                         shift and go to state 19
    var                            shift and go to state 31
    call                           shift and go to state 21
    simple_expression              shift and go to state 32
    expression                     shift and go to state 106

state 97

    (28) expression_stmt -> PRINT LPAREN . var RPAREN SEMICOLON
    (29) expression_stmt -> PRINT LPAREN . QUOTES STRING QUOTES RPAREN SEMICOLON
    (47) var -> . ID

    QUOTES          shift and go to state 107
    ID              shift and go to state 24


    var                            shift and go to state 108

state 98

    (38) iteration_stmt -> FOR LPAREN . var SEMICOLON expression SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> FOR LPAREN . var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> FOR LPAREN . var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> FOR LPAREN . var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> FOR LPAREN . var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (47) var -> . ID

    ID              shift and go to state 24


    var                            shift and go to state 109

state 99

    (31) expression_stmt -> PLUSPLUS ID .

    RBLOCK          reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)
    SEMICOLON       reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)
    PRINT           reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)
    ID              reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)
    PLUSPLUS        reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)
    MINUSMINUS      reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)
    LBLOCK          reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)
    IF              reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)
    WHILE           reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)
    FOR             reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)
    RETURN          reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)
    LPAREN          reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)
    NUMBER          reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)
    ELSE            reduce using rule 31 (expression_stmt -> PLUSPLUS ID .)



state 100

    (33) expression_stmt -> MINUSMINUS ID .

    RBLOCK          reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)
    SEMICOLON       reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)
    PRINT           reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)
    ID              reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)
    PLUSPLUS        reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)
    MINUSMINUS      reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)
    LBLOCK          reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)
    IF              reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)
    WHILE           reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)
    FOR             reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)
    RETURN          reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)
    LPAREN          reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)
    NUMBER          reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)
    ELSE            reduce using rule 33 (expression_stmt -> MINUSMINUS ID .)



state 101

    (30) expression_stmt -> ID PLUSPLUS .

    RBLOCK          reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)
    SEMICOLON       reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)
    PRINT           reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)
    ID              reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)
    PLUSPLUS        reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)
    MINUSMINUS      reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)
    LBLOCK          reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)
    IF              reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)
    WHILE           reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)
    FOR             reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)
    RETURN          reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)
    LPAREN          reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)
    NUMBER          reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)
    ELSE            reduce using rule 30 (expression_stmt -> ID PLUSPLUS .)



state 102

    (32) expression_stmt -> ID MINUSMINUS .

    RBLOCK          reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)
    SEMICOLON       reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)
    PRINT           reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)
    ID              reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)
    PLUSPLUS        reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)
    MINUSMINUS      reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)
    LBLOCK          reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)
    IF              reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)
    WHILE           reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)
    FOR             reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)
    RETURN          reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)
    LPAREN          reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)
    NUMBER          reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)
    ELSE            reduce using rule 32 (expression_stmt -> ID MINUSMINUS .)



state 103

    (34) selection_stmt -> IF LPAREN . expression RPAREN statement
    (35) selection_stmt -> IF LPAREN . expression RPAREN statement ELSE statement
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 22
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16


    operation_expression           shift and go to state 30
    factor                         shift and go to state 19
    var                            shift and go to state 31
    call                           shift and go to state 21
    simple_expression              shift and go to state 32
    expression                     shift and go to state 110

state 104

    (26) expression_stmt -> expression SEMICOLON .

    RBLOCK          reduce using rule 26 (expression_stmt -> expression SEMICOLON .)
    SEMICOLON       reduce using rule 26 (expression_stmt -> expression SEMICOLON .)
    PRINT           reduce using rule 26 (expression_stmt -> expression SEMICOLON .)
    ID              reduce using rule 26 (expression_stmt -> expression SEMICOLON .)
    PLUSPLUS        reduce using rule 26 (expression_stmt -> expression SEMICOLON .)
    MINUSMINUS      reduce using rule 26 (expression_stmt -> expression SEMICOLON .)
    LBLOCK          reduce using rule 26 (expression_stmt -> expression SEMICOLON .)
    IF              reduce using rule 26 (expression_stmt -> expression SEMICOLON .)
    WHILE           reduce using rule 26 (expression_stmt -> expression SEMICOLON .)
    FOR             reduce using rule 26 (expression_stmt -> expression SEMICOLON .)
    RETURN          reduce using rule 26 (expression_stmt -> expression SEMICOLON .)
    LPAREN          reduce using rule 26 (expression_stmt -> expression SEMICOLON .)
    NUMBER          reduce using rule 26 (expression_stmt -> expression SEMICOLON .)
    ELSE            reduce using rule 26 (expression_stmt -> expression SEMICOLON .)



state 105

    (44) return_stmt -> RETURN expression SEMICOLON .

    RBLOCK          reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)
    SEMICOLON       reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)
    ID              reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)
    PLUSPLUS        reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)
    MINUSMINUS      reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)
    LBLOCK          reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)
    IF              reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 44 (return_stmt -> RETURN expression SEMICOLON .)



state 106

    (36) iteration_stmt -> WHILE LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 111



state 107

    (29) expression_stmt -> PRINT LPAREN QUOTES . STRING QUOTES RPAREN SEMICOLON

    STRING          shift and go to state 112



state 108

    (28) expression_stmt -> PRINT LPAREN var . RPAREN SEMICOLON

    RPAREN          shift and go to state 113



state 109

    (38) iteration_stmt -> FOR LPAREN var . SEMICOLON expression SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> FOR LPAREN var . SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> FOR LPAREN var . SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> FOR LPAREN var . SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> FOR LPAREN var . SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement

    SEMICOLON       shift and go to state 114



state 110

    (34) selection_stmt -> IF LPAREN expression . RPAREN statement
    (35) selection_stmt -> IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN          shift and go to state 115



state 111

    (36) iteration_stmt -> WHILE LPAREN expression RPAREN . statement
    (21) statement -> . expression_stmt
    (22) statement -> . compount_stmt
    (23) statement -> . selection_stmt
    (24) statement -> . iteration_stmt
    (25) statement -> . return_stmt
    (26) expression_stmt -> . expression SEMICOLON
    (27) expression_stmt -> . SEMICOLON
    (28) expression_stmt -> . PRINT LPAREN var RPAREN SEMICOLON
    (29) expression_stmt -> . PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON
    (30) expression_stmt -> . ID PLUSPLUS
    (31) expression_stmt -> . PLUSPLUS ID
    (32) expression_stmt -> . ID MINUSMINUS
    (33) expression_stmt -> . MINUSMINUS ID
    (16) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (34) selection_stmt -> . IF LPAREN expression RPAREN statement
    (35) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (37) iteration_stmt -> .
    (38) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (43) return_stmt -> . RETURN SEMICOLON
    (44) return_stmt -> . RETURN expression SEMICOLON
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift.
  ! shift/reduce conflict for PRINT resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for PLUSPLUS resolved as shift.
  ! shift/reduce conflict for MINUSMINUS resolved as shift.
  ! shift/reduce conflict for LBLOCK resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for WHILE resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for LPAREN resolved as shift.
  ! shift/reduce conflict for NUMBER resolved as shift.
    SEMICOLON       shift and go to state 81
    PRINT           shift and go to state 80
    ID              shift and go to state 89
    PLUSPLUS        shift and go to state 86
    MINUSMINUS      shift and go to state 88
    LBLOCK          shift and go to state 64
    IF              shift and go to state 90
    WHILE           shift and go to state 78
    RBLOCK          reduce using rule 37 (iteration_stmt -> .)
    ELSE            reduce using rule 37 (iteration_stmt -> .)
    FOR             shift and go to state 85
    RETURN          shift and go to state 77
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16

  ! SEMICOLON       [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PRINT           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 37 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 37 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 37 (iteration_stmt -> .) ]

    return_stmt                    shift and go to state 79
    call                           shift and go to state 21
    factor                         shift and go to state 19
    compount_stmt                  shift and go to state 87
    operation_expression           shift and go to state 30
    expression_stmt                shift and go to state 82
    statement                      shift and go to state 116
    selection_stmt                 shift and go to state 84
    var                            shift and go to state 31
    iteration_stmt                 shift and go to state 92
    simple_expression              shift and go to state 32
    expression                     shift and go to state 93

state 112

    (29) expression_stmt -> PRINT LPAREN QUOTES STRING . QUOTES RPAREN SEMICOLON

    QUOTES          shift and go to state 117



state 113

    (28) expression_stmt -> PRINT LPAREN var RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 118



state 114

    (38) iteration_stmt -> FOR LPAREN var SEMICOLON . expression SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> FOR LPAREN var SEMICOLON . expression SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> FOR LPAREN var SEMICOLON . expression SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> FOR LPAREN var SEMICOLON . expression SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> FOR LPAREN var SEMICOLON . expression SEMICOLON MINUSMINUS var RPAREN statement
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 22
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16


    operation_expression           shift and go to state 30
    factor                         shift and go to state 19
    var                            shift and go to state 31
    call                           shift and go to state 21
    simple_expression              shift and go to state 32
    expression                     shift and go to state 119

state 115

    (34) selection_stmt -> IF LPAREN expression RPAREN . statement
    (35) selection_stmt -> IF LPAREN expression RPAREN . statement ELSE statement
    (21) statement -> . expression_stmt
    (22) statement -> . compount_stmt
    (23) statement -> . selection_stmt
    (24) statement -> . iteration_stmt
    (25) statement -> . return_stmt
    (26) expression_stmt -> . expression SEMICOLON
    (27) expression_stmt -> . SEMICOLON
    (28) expression_stmt -> . PRINT LPAREN var RPAREN SEMICOLON
    (29) expression_stmt -> . PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON
    (30) expression_stmt -> . ID PLUSPLUS
    (31) expression_stmt -> . PLUSPLUS ID
    (32) expression_stmt -> . ID MINUSMINUS
    (33) expression_stmt -> . MINUSMINUS ID
    (16) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (34) selection_stmt -> . IF LPAREN expression RPAREN statement
    (35) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (37) iteration_stmt -> .
    (38) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (43) return_stmt -> . RETURN SEMICOLON
    (44) return_stmt -> . RETURN expression SEMICOLON
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift.
  ! shift/reduce conflict for PRINT resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for PLUSPLUS resolved as shift.
  ! shift/reduce conflict for MINUSMINUS resolved as shift.
  ! shift/reduce conflict for LBLOCK resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for WHILE resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for LPAREN resolved as shift.
  ! shift/reduce conflict for NUMBER resolved as shift.
    SEMICOLON       shift and go to state 81
    PRINT           shift and go to state 80
    ID              shift and go to state 89
    PLUSPLUS        shift and go to state 86
    MINUSMINUS      shift and go to state 88
    LBLOCK          shift and go to state 64
    IF              shift and go to state 90
    WHILE           shift and go to state 78
    RBLOCK          reduce using rule 37 (iteration_stmt -> .)
    ELSE            reduce using rule 37 (iteration_stmt -> .)
    FOR             shift and go to state 85
    RETURN          shift and go to state 77
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16

  ! SEMICOLON       [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PRINT           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 37 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 37 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 37 (iteration_stmt -> .) ]

    return_stmt                    shift and go to state 79
    call                           shift and go to state 21
    factor                         shift and go to state 19
    compount_stmt                  shift and go to state 87
    operation_expression           shift and go to state 30
    expression_stmt                shift and go to state 82
    statement                      shift and go to state 120
    selection_stmt                 shift and go to state 84
    var                            shift and go to state 31
    iteration_stmt                 shift and go to state 92
    simple_expression              shift and go to state 32
    expression                     shift and go to state 93

state 116

    (36) iteration_stmt -> WHILE LPAREN expression RPAREN statement .

    RBLOCK          reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    SEMICOLON       reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 36 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)



state 117

    (29) expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES . RPAREN SEMICOLON

    RPAREN          shift and go to state 121



state 118

    (28) expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .

    RBLOCK          reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)
    PRINT           reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)
    ID              reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)
    PLUSPLUS        reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)
    MINUSMINUS      reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)
    LBLOCK          reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)
    IF              reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)
    WHILE           reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)
    FOR             reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)
    RETURN          reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)
    LPAREN          reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)
    NUMBER          reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)
    ELSE            reduce using rule 28 (expression_stmt -> PRINT LPAREN var RPAREN SEMICOLON .)



state 119

    (38) iteration_stmt -> FOR LPAREN var SEMICOLON expression . SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> FOR LPAREN var SEMICOLON expression . SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> FOR LPAREN var SEMICOLON expression . SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> FOR LPAREN var SEMICOLON expression . SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> FOR LPAREN var SEMICOLON expression . SEMICOLON MINUSMINUS var RPAREN statement

    SEMICOLON       shift and go to state 122



state 120

    (34) selection_stmt -> IF LPAREN expression RPAREN statement .
    (35) selection_stmt -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift.
    RBLOCK          reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    SEMICOLON       reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 123

  ! ELSE            [ reduce using rule 34 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]


state 121

    (29) expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 124



state 122

    (38) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON . expression RPAREN statement
    (39) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON . var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON . PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON . var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON . MINUSMINUS var RPAREN statement
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

    PLUSPLUS        shift and go to state 125
    MINUSMINUS      shift and go to state 127
    ID              shift and go to state 22
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16


    operation_expression           shift and go to state 30
    factor                         shift and go to state 19
    var                            shift and go to state 126
    call                           shift and go to state 21
    simple_expression              shift and go to state 32
    expression                     shift and go to state 128

state 123

    (35) selection_stmt -> IF LPAREN expression RPAREN statement ELSE . statement
    (21) statement -> . expression_stmt
    (22) statement -> . compount_stmt
    (23) statement -> . selection_stmt
    (24) statement -> . iteration_stmt
    (25) statement -> . return_stmt
    (26) expression_stmt -> . expression SEMICOLON
    (27) expression_stmt -> . SEMICOLON
    (28) expression_stmt -> . PRINT LPAREN var RPAREN SEMICOLON
    (29) expression_stmt -> . PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON
    (30) expression_stmt -> . ID PLUSPLUS
    (31) expression_stmt -> . PLUSPLUS ID
    (32) expression_stmt -> . ID MINUSMINUS
    (33) expression_stmt -> . MINUSMINUS ID
    (16) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (34) selection_stmt -> . IF LPAREN expression RPAREN statement
    (35) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (37) iteration_stmt -> .
    (38) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (43) return_stmt -> . RETURN SEMICOLON
    (44) return_stmt -> . RETURN expression SEMICOLON
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift.
  ! shift/reduce conflict for PRINT resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for PLUSPLUS resolved as shift.
  ! shift/reduce conflict for MINUSMINUS resolved as shift.
  ! shift/reduce conflict for LBLOCK resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for WHILE resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for LPAREN resolved as shift.
  ! shift/reduce conflict for NUMBER resolved as shift.
    SEMICOLON       shift and go to state 81
    PRINT           shift and go to state 80
    ID              shift and go to state 89
    PLUSPLUS        shift and go to state 86
    MINUSMINUS      shift and go to state 88
    LBLOCK          shift and go to state 64
    IF              shift and go to state 90
    WHILE           shift and go to state 78
    RBLOCK          reduce using rule 37 (iteration_stmt -> .)
    ELSE            reduce using rule 37 (iteration_stmt -> .)
    FOR             shift and go to state 85
    RETURN          shift and go to state 77
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16

  ! SEMICOLON       [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PRINT           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 37 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 37 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 37 (iteration_stmt -> .) ]

    return_stmt                    shift and go to state 79
    call                           shift and go to state 21
    factor                         shift and go to state 19
    compount_stmt                  shift and go to state 87
    operation_expression           shift and go to state 30
    expression_stmt                shift and go to state 82
    statement                      shift and go to state 129
    selection_stmt                 shift and go to state 84
    var                            shift and go to state 31
    iteration_stmt                 shift and go to state 92
    simple_expression              shift and go to state 32
    expression                     shift and go to state 93

state 124

    (29) expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .

    RBLOCK          reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)
    PRINT           reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)
    ID              reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)
    PLUSPLUS        reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)
    MINUSMINUS      reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)
    LBLOCK          reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)
    IF              reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)
    FOR             reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)
    LPAREN          reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)
    NUMBER          reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)
    ELSE            reduce using rule 29 (expression_stmt -> PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON .)



state 125

    (40) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS . var RPAREN statement
    (47) var -> . ID

    ID              shift and go to state 24


    var                            shift and go to state 130

state 126

    (39) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var . PLUSPLUS RPAREN statement
    (41) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var . MINUSMINUS RPAREN statement
    (45) expression -> var . EQUAL expression
    (66) factor -> var .

    PLUSPLUS        shift and go to state 131
    MINUSMINUS      shift and go to state 132
    EQUAL           shift and go to state 54
    PLUS            reduce using rule 66 (factor -> var .)
    MINUS           reduce using rule 66 (factor -> var .)
    TIMES           reduce using rule 66 (factor -> var .)
    DIVIDE          reduce using rule 66 (factor -> var .)
    LESS            reduce using rule 66 (factor -> var .)
    LESSEQUAL       reduce using rule 66 (factor -> var .)
    GREATER         reduce using rule 66 (factor -> var .)
    GREATEREQUAL    reduce using rule 66 (factor -> var .)
    DEQUAL          reduce using rule 66 (factor -> var .)
    DISTINT         reduce using rule 66 (factor -> var .)
    QUOTES          reduce using rule 66 (factor -> var .)
    RPAREN          reduce using rule 66 (factor -> var .)



state 127

    (42) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS . var RPAREN statement
    (47) var -> . ID

    ID              shift and go to state 24


    var                            shift and go to state 133

state 128

    (38) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression . RPAREN statement

    RPAREN          shift and go to state 134



state 129

    (35) selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .

    RBLOCK          reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    SEMICOLON       reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    PRINT           reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUSPLUS        reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUSMINUS      reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBLOCK          reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 35 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)



state 130

    (40) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var . RPAREN statement

    RPAREN          shift and go to state 135



state 131

    (39) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS . RPAREN statement

    RPAREN          shift and go to state 136



state 132

    (41) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS . RPAREN statement

    RPAREN          shift and go to state 137



state 133

    (42) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var . RPAREN statement

    RPAREN          shift and go to state 138



state 134

    (38) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN . statement
    (21) statement -> . expression_stmt
    (22) statement -> . compount_stmt
    (23) statement -> . selection_stmt
    (24) statement -> . iteration_stmt
    (25) statement -> . return_stmt
    (26) expression_stmt -> . expression SEMICOLON
    (27) expression_stmt -> . SEMICOLON
    (28) expression_stmt -> . PRINT LPAREN var RPAREN SEMICOLON
    (29) expression_stmt -> . PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON
    (30) expression_stmt -> . ID PLUSPLUS
    (31) expression_stmt -> . PLUSPLUS ID
    (32) expression_stmt -> . ID MINUSMINUS
    (33) expression_stmt -> . MINUSMINUS ID
    (16) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (34) selection_stmt -> . IF LPAREN expression RPAREN statement
    (35) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (37) iteration_stmt -> .
    (38) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (43) return_stmt -> . RETURN SEMICOLON
    (44) return_stmt -> . RETURN expression SEMICOLON
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift.
  ! shift/reduce conflict for PRINT resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for PLUSPLUS resolved as shift.
  ! shift/reduce conflict for MINUSMINUS resolved as shift.
  ! shift/reduce conflict for LBLOCK resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for WHILE resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for LPAREN resolved as shift.
  ! shift/reduce conflict for NUMBER resolved as shift.
    SEMICOLON       shift and go to state 81
    PRINT           shift and go to state 80
    ID              shift and go to state 89
    PLUSPLUS        shift and go to state 86
    MINUSMINUS      shift and go to state 88
    LBLOCK          shift and go to state 64
    IF              shift and go to state 90
    WHILE           shift and go to state 78
    RBLOCK          reduce using rule 37 (iteration_stmt -> .)
    ELSE            reduce using rule 37 (iteration_stmt -> .)
    FOR             shift and go to state 85
    RETURN          shift and go to state 77
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16

  ! SEMICOLON       [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PRINT           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 37 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 37 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 37 (iteration_stmt -> .) ]

    operation_expression           shift and go to state 30
    return_stmt                    shift and go to state 79
    call                           shift and go to state 21
    factor                         shift and go to state 19
    compount_stmt                  shift and go to state 87
    iteration_stmt                 shift and go to state 92
    expression_stmt                shift and go to state 82
    statement                      shift and go to state 139
    var                            shift and go to state 31
    selection_stmt                 shift and go to state 84
    simple_expression              shift and go to state 32
    expression                     shift and go to state 93

state 135

    (40) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN . statement
    (21) statement -> . expression_stmt
    (22) statement -> . compount_stmt
    (23) statement -> . selection_stmt
    (24) statement -> . iteration_stmt
    (25) statement -> . return_stmt
    (26) expression_stmt -> . expression SEMICOLON
    (27) expression_stmt -> . SEMICOLON
    (28) expression_stmt -> . PRINT LPAREN var RPAREN SEMICOLON
    (29) expression_stmt -> . PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON
    (30) expression_stmt -> . ID PLUSPLUS
    (31) expression_stmt -> . PLUSPLUS ID
    (32) expression_stmt -> . ID MINUSMINUS
    (33) expression_stmt -> . MINUSMINUS ID
    (16) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (34) selection_stmt -> . IF LPAREN expression RPAREN statement
    (35) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (37) iteration_stmt -> .
    (38) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (43) return_stmt -> . RETURN SEMICOLON
    (44) return_stmt -> . RETURN expression SEMICOLON
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift.
  ! shift/reduce conflict for PRINT resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for PLUSPLUS resolved as shift.
  ! shift/reduce conflict for MINUSMINUS resolved as shift.
  ! shift/reduce conflict for LBLOCK resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for WHILE resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for LPAREN resolved as shift.
  ! shift/reduce conflict for NUMBER resolved as shift.
    SEMICOLON       shift and go to state 81
    PRINT           shift and go to state 80
    ID              shift and go to state 89
    PLUSPLUS        shift and go to state 86
    MINUSMINUS      shift and go to state 88
    LBLOCK          shift and go to state 64
    IF              shift and go to state 90
    WHILE           shift and go to state 78
    RBLOCK          reduce using rule 37 (iteration_stmt -> .)
    ELSE            reduce using rule 37 (iteration_stmt -> .)
    FOR             shift and go to state 85
    RETURN          shift and go to state 77
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16

  ! SEMICOLON       [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PRINT           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 37 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 37 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 37 (iteration_stmt -> .) ]

    operation_expression           shift and go to state 30
    return_stmt                    shift and go to state 79
    call                           shift and go to state 21
    factor                         shift and go to state 19
    compount_stmt                  shift and go to state 87
    iteration_stmt                 shift and go to state 92
    expression_stmt                shift and go to state 82
    statement                      shift and go to state 140
    var                            shift and go to state 31
    selection_stmt                 shift and go to state 84
    simple_expression              shift and go to state 32
    expression                     shift and go to state 93

state 136

    (39) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN . statement
    (21) statement -> . expression_stmt
    (22) statement -> . compount_stmt
    (23) statement -> . selection_stmt
    (24) statement -> . iteration_stmt
    (25) statement -> . return_stmt
    (26) expression_stmt -> . expression SEMICOLON
    (27) expression_stmt -> . SEMICOLON
    (28) expression_stmt -> . PRINT LPAREN var RPAREN SEMICOLON
    (29) expression_stmt -> . PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON
    (30) expression_stmt -> . ID PLUSPLUS
    (31) expression_stmt -> . PLUSPLUS ID
    (32) expression_stmt -> . ID MINUSMINUS
    (33) expression_stmt -> . MINUSMINUS ID
    (16) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (34) selection_stmt -> . IF LPAREN expression RPAREN statement
    (35) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (37) iteration_stmt -> .
    (38) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (43) return_stmt -> . RETURN SEMICOLON
    (44) return_stmt -> . RETURN expression SEMICOLON
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift.
  ! shift/reduce conflict for PRINT resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for PLUSPLUS resolved as shift.
  ! shift/reduce conflict for MINUSMINUS resolved as shift.
  ! shift/reduce conflict for LBLOCK resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for WHILE resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for LPAREN resolved as shift.
  ! shift/reduce conflict for NUMBER resolved as shift.
    SEMICOLON       shift and go to state 81
    PRINT           shift and go to state 80
    ID              shift and go to state 89
    PLUSPLUS        shift and go to state 86
    MINUSMINUS      shift and go to state 88
    LBLOCK          shift and go to state 64
    IF              shift and go to state 90
    WHILE           shift and go to state 78
    RBLOCK          reduce using rule 37 (iteration_stmt -> .)
    ELSE            reduce using rule 37 (iteration_stmt -> .)
    FOR             shift and go to state 85
    RETURN          shift and go to state 77
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16

  ! SEMICOLON       [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PRINT           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 37 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 37 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 37 (iteration_stmt -> .) ]

    operation_expression           shift and go to state 30
    return_stmt                    shift and go to state 79
    call                           shift and go to state 21
    factor                         shift and go to state 19
    compount_stmt                  shift and go to state 87
    iteration_stmt                 shift and go to state 92
    expression_stmt                shift and go to state 82
    statement                      shift and go to state 141
    var                            shift and go to state 31
    selection_stmt                 shift and go to state 84
    simple_expression              shift and go to state 32
    expression                     shift and go to state 93

state 137

    (41) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN . statement
    (21) statement -> . expression_stmt
    (22) statement -> . compount_stmt
    (23) statement -> . selection_stmt
    (24) statement -> . iteration_stmt
    (25) statement -> . return_stmt
    (26) expression_stmt -> . expression SEMICOLON
    (27) expression_stmt -> . SEMICOLON
    (28) expression_stmt -> . PRINT LPAREN var RPAREN SEMICOLON
    (29) expression_stmt -> . PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON
    (30) expression_stmt -> . ID PLUSPLUS
    (31) expression_stmt -> . PLUSPLUS ID
    (32) expression_stmt -> . ID MINUSMINUS
    (33) expression_stmt -> . MINUSMINUS ID
    (16) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (34) selection_stmt -> . IF LPAREN expression RPAREN statement
    (35) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (37) iteration_stmt -> .
    (38) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (43) return_stmt -> . RETURN SEMICOLON
    (44) return_stmt -> . RETURN expression SEMICOLON
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift.
  ! shift/reduce conflict for PRINT resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for PLUSPLUS resolved as shift.
  ! shift/reduce conflict for MINUSMINUS resolved as shift.
  ! shift/reduce conflict for LBLOCK resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for WHILE resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for LPAREN resolved as shift.
  ! shift/reduce conflict for NUMBER resolved as shift.
    SEMICOLON       shift and go to state 81
    PRINT           shift and go to state 80
    ID              shift and go to state 89
    PLUSPLUS        shift and go to state 86
    MINUSMINUS      shift and go to state 88
    LBLOCK          shift and go to state 64
    IF              shift and go to state 90
    WHILE           shift and go to state 78
    RBLOCK          reduce using rule 37 (iteration_stmt -> .)
    ELSE            reduce using rule 37 (iteration_stmt -> .)
    FOR             shift and go to state 85
    RETURN          shift and go to state 77
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16

  ! SEMICOLON       [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PRINT           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 37 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 37 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 37 (iteration_stmt -> .) ]

    operation_expression           shift and go to state 30
    return_stmt                    shift and go to state 79
    call                           shift and go to state 21
    factor                         shift and go to state 19
    compount_stmt                  shift and go to state 87
    iteration_stmt                 shift and go to state 92
    expression_stmt                shift and go to state 82
    statement                      shift and go to state 142
    var                            shift and go to state 31
    selection_stmt                 shift and go to state 84
    simple_expression              shift and go to state 32
    expression                     shift and go to state 93

state 138

    (42) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN . statement
    (21) statement -> . expression_stmt
    (22) statement -> . compount_stmt
    (23) statement -> . selection_stmt
    (24) statement -> . iteration_stmt
    (25) statement -> . return_stmt
    (26) expression_stmt -> . expression SEMICOLON
    (27) expression_stmt -> . SEMICOLON
    (28) expression_stmt -> . PRINT LPAREN var RPAREN SEMICOLON
    (29) expression_stmt -> . PRINT LPAREN QUOTES STRING QUOTES RPAREN SEMICOLON
    (30) expression_stmt -> . ID PLUSPLUS
    (31) expression_stmt -> . PLUSPLUS ID
    (32) expression_stmt -> . ID MINUSMINUS
    (33) expression_stmt -> . MINUSMINUS ID
    (16) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (34) selection_stmt -> . IF LPAREN expression RPAREN statement
    (35) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (37) iteration_stmt -> .
    (38) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement
    (39) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (40) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (41) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (42) iteration_stmt -> . FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (43) return_stmt -> . RETURN SEMICOLON
    (44) return_stmt -> . RETURN expression SEMICOLON
    (45) expression -> . var EQUAL expression
    (46) expression -> . simple_expression
    (47) var -> . ID
    (48) simple_expression -> . operation_expression relop operation_expression
    (49) simple_expression -> . operation_expression
    (57) operation_expression -> . factor simb_op operation_expression
    (58) operation_expression -> . factor
    (65) factor -> . LPAREN expression RPAREN
    (66) factor -> . var
    (67) factor -> . call
    (68) factor -> . NUMBER
    (69) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift.
  ! shift/reduce conflict for PRINT resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for PLUSPLUS resolved as shift.
  ! shift/reduce conflict for MINUSMINUS resolved as shift.
  ! shift/reduce conflict for LBLOCK resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for WHILE resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for LPAREN resolved as shift.
  ! shift/reduce conflict for NUMBER resolved as shift.
    SEMICOLON       shift and go to state 81
    PRINT           shift and go to state 80
    ID              shift and go to state 89
    PLUSPLUS        shift and go to state 86
    MINUSMINUS      shift and go to state 88
    LBLOCK          shift and go to state 64
    IF              shift and go to state 90
    WHILE           shift and go to state 78
    RBLOCK          reduce using rule 37 (iteration_stmt -> .)
    ELSE            reduce using rule 37 (iteration_stmt -> .)
    FOR             shift and go to state 85
    RETURN          shift and go to state 77
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 16

  ! SEMICOLON       [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PRINT           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 37 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 37 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 37 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 37 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 37 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 37 (iteration_stmt -> .) ]

    operation_expression           shift and go to state 30
    return_stmt                    shift and go to state 79
    call                           shift and go to state 21
    factor                         shift and go to state 19
    compount_stmt                  shift and go to state 87
    iteration_stmt                 shift and go to state 92
    expression_stmt                shift and go to state 82
    statement                      shift and go to state 143
    var                            shift and go to state 31
    selection_stmt                 shift and go to state 84
    simple_expression              shift and go to state 32
    expression                     shift and go to state 93

state 139

    (38) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .

    RBLOCK          reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)
    SEMICOLON       reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)
    PRINT           reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)
    ID              reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)
    PLUSPLUS        reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)
    MINUSMINUS      reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LBLOCK          reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)
    IF              reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)
    WHILE           reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)
    FOR             reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)
    RETURN          reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LPAREN          reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)
    NUMBER          reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)
    ELSE            reduce using rule 38 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement .)



state 140

    (40) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .

    RBLOCK          reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    SEMICOLON       reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    PRINT           reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    ID              reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    PLUSPLUS        reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    MINUSMINUS      reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    LBLOCK          reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    IF              reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    WHILE           reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    FOR             reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    RETURN          reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    LPAREN          reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    NUMBER          reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    ELSE            reduce using rule 40 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)



state 141

    (39) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .

    RBLOCK          reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    SEMICOLON       reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    PRINT           reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    ID              reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    PLUSPLUS        reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    MINUSMINUS      reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    LBLOCK          reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    IF              reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    WHILE           reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    FOR             reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    RETURN          reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    LPAREN          reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    NUMBER          reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    ELSE            reduce using rule 39 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)



state 142

    (41) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .

    RBLOCK          reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    SEMICOLON       reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    PRINT           reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    ID              reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    PLUSPLUS        reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    MINUSMINUS      reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    LBLOCK          reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    IF              reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    WHILE           reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    FOR             reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    RETURN          reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    LPAREN          reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    NUMBER          reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    ELSE            reduce using rule 41 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)



state 143

    (42) iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .

    RBLOCK          reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    SEMICOLON       reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    PRINT           reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    ID              reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    PLUSPLUS        reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    MINUSMINUS      reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    LBLOCK          reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    IF              reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    WHILE           reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    FOR             reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    RETURN          reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    LPAREN          reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    NUMBER          reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    ELSE            reduce using rule 42 (iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)


